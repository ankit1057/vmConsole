apply plugin: 'com.android.application'

android {
    compileSdkVersion 33

    dependencies {
        implementation "androidx.annotation:annotation:1.4.0"
        implementation "androidx.preference:preference:1.2.0"
    }

    defaultConfig {
        applicationId "sylirre.vmconsole"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 29
        versionName "2.1.0"
        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
        externalNativeBuild {

            // For ndk-build, instead use the ndkBuild block.
            cmake {

                // Passes optional arguments to CMake.
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"

                // Sets a flag to enable format macro constants for the C compiler.
                cFlags "-D__STDC_FORMAT_MACROS"

                // Sets optional flags for the C++ compiler.
                cppFlags "-fexceptions", "-frtti"
            }
        }
        archivesBaseName = "vmConsole-$versionName"

        splits {
            abi {
                enable false
                reset()
                include 'arm64-v8a', 'x86_64', 'armeabi-v7a', 'x86'
                universalApk true
            }
        }
    }

    signingConfigs {
        release {
            storeFile file('vmconsole.jks')
            keyAlias 'vmconsole'
            storePassword System.getenv("KEY_PASSPHRASE")
            keyPassword System.getenv("KEY_PASSPHRASE")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            shrinkResources false
            //signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jnilibs']
        }
    }

    ndkVersion '25.2.9519653'

    /*packagingOptions {
        jniLibs.useLegacyPackaging = true
    }*/

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

tasks.withType(Test) {
    testLogging {
        events "started", "passed", "skipped", "failed"
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
}
